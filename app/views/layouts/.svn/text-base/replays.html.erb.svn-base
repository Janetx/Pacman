<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
  <meta http-equiv="content-type" content="text/html;charset=UTF-8" />
  <title>Replays: <%= controller.action_name %></title>
  <%= stylesheet_link_tag 'style' %>

  <meta name = "viewport" content = "width = device-width; initial-scale=1.0; maximum-scale=1.0; user-scalable=no;">	
  <script src="../javascripts/prototype.js" type="text/javascript" charset="utf-8"></script>	
  <script src="http://code.google.com/apis/gears/gears_init.js" type="text/javascript" charset="utf-8"></script>
  <script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>

  <script type="text/javascript"> 

   var map;
   var markersArray = [];
   function initialize_map()
   {
       
        
		//alert(location.pathname);
		pathArray = window.location.pathname.split('/');

		//alert(pathArray[2]);
		//local 
		//var gameID = pathArray[2];
		//server		
		//TODO 
		var gameID = pathArray[3];

		
		
		//for local build 
		/*var request = new Ajax.Request('http://localhost:3000/replays/gameInfo', {
					//method: 'get',
					parameters: {game_id: gameID},
					onComplete: getMapResponse					
					});
		*/
		// for server build
		//TODO 
		var request = new Ajax.Request('http://cmpt470.csil.sfu.ca:8009/pacman/replays/gameInfo', {
					//method: 'get',
					parameters: {game_id: gameID},
					onComplete: getMapResponse					
					});

		getLogInfo();
		
   }

	function getMapResponse(originalRequest)
	{
		var data = originalRequest.responseXML.getElementsByTagName('games');
		//alert(data);
		//	var a = data[0].getElementsByTagName('games');
		var innerText = data[0].getElementsByTagName('game');

	

		for( i = 0; i < innerText.length; i++)
		{
			latitude = innerText[i].getElementsByTagName('latitude');
			longitude = innerText[i].getElementsByTagName('longitude');
			lat_text = latitude[0].firstChild.nodeValue;
			long_text = longitude[0].firstChild.nodeValue;
			//alert(lat_text + "," +  long_text);
		}
		var latlong = new google.maps.LatLng(lat_text,long_text);
		//var latlong = new google.maps.LatLng(49.284085,-123.106354);
		
  		var options = {
	        zoom: 15, 
            center: latlong,
 			mapTypeId: google.maps.MapTypeId.ROADMAP
        }
        map = new google.maps.Map(document.getElementById("map_canvas"), options);


	}





	function getLogInfo()
	{
		pathArray = window.location.pathname.split('/');
		//local
		/*
		var gameID = pathArray[2];
		var request1 = new Ajax.Request('http://localhost:3000/replays/matchLog_info',{
				//method: 'get',
				parameters: {game_id: gameID, ptype :'pacman'},
				onComplete: getPlayerLocation
				});

		var request2 = new Ajax.Request('http://localhost:3000/replays/matchLog_info',{
				//method: 'get',
				parameters: {game_id: gameID, ptype : 'ghost'},
				onComplete: getPlayerLocation
				});
		*/
		//server 
		var gameID = pathArray[3];
		var request1 = new Ajax.Request('http://cmpt470.csil.sfu.ca:8009/pacman/replays/matchLog_info',{
				//method: 'get',
				parameters: {game_id: gameID, ptype :'pacman'},
				onComplete: getPlayerLocation
				});

		var request2 = new Ajax.Request('http://cmpt470.csil.sfu.ca:8009/pacman/replays/matchLog_info',{
				//method: 'get',
				parameters: {game_id: gameID, ptype : 'ghost'},
				onComplete: getPlayerLocation
				});


	}

	function getPlayerLocation(originalRequest)
	{
		var data = originalRequest.responseXML.getElementsByTagName('match-logs');
		//alert(data);
		//	var a = data[0].getElementsByTagName('games');
		var innerText = data[0].getElementsByTagName('match-log');
        
	

		for( i = 0; i < innerText.length; i++)
		{
			latitude = innerText[i].getElementsByTagName('lat');
			longitude = innerText[i].getElementsByTagName('long');
			playerid = innerText[i].getElementsByTagName('player-id');
			gameid = innerText[i].getElementsByTagName('game-id');
	
			lat_text = latitude[0].firstChild.nodeValue;
			long_text = longitude[0].firstChild.nodeValue;
			playerid_text = playerid[0].firstChild.nodeValue;
			gameid_text = gameid[0].firstChild.nodeValue;
			//alert("player ID : " + playerid_text + "currently in game : " + gameid_text);
			//alert(lat_text + "," +  long_text);
		
			var latlong = new google.maps.LatLng(lat_text,long_text);
			
			//get Pacman or Ghost
			//var requestType = new Ajax.Request('http://localhost:3000/replays/currentType', {
			//	parameters: {game_id: gameid_text, player_id: playerid_text},
			// 	onComplete: setCurrentPlayer
			//	});
		   // var pacmanIcon = "images/map_ghost.png";

			
			addMarker(latlong);
    		//setTimeout(getPlayerLocation(originalRequest),10000);
			//clearOverlays();
		}
		showOverlays();
		
	}

	function setCurrentPlayer(originalRequest)
	{
		var data = originalRequest.responseXML.getElementsByTagName('players');

		var innerText = data[0].getElementsByTagName('player');
        
	

		for( i = 0; i < innerText.length; i++)
		{
			a = innerText[i].getElementsByTagName('status');
			a_text = latitude[0].firstChild.nodeValue;
			//alert("here" + a_text);
		}
	}

	function addMarker(location){
		var marker = new google.maps.Marker({
				position: location,
				title: "pacman",
				//icon: pacmanIcon
  		});
		markersArray.push(marker);
	}
		
	function showOverlays(){
		if(markersArray){
			i = i + 1;
			if(i > 0){ markersArray[i].setMap(null);}
			markersArray[i].setMap(map);
		    setTimeout(showOverlays(), 30000);
		}

	}

	function clearOverlays(){
		if(markersArray){
			for(i in markersArray){
				markersArray[i].setMap(null);
			}
		}
	}
	


	function removeMarker(){
		if(markersArray){
			for(i in markersArray){
				markersArray[i].setMap(null);
			}
		}
		markersArray.length = 0;
	}



	
  </script>
</head>
<body onload="initialize_map();">

<div id="container">
	<h1></h1>
	<div id="menu">
		<ul>
		<li><%= link_to image_tag("new") + "Games", games_url %></li>
		<li><%= link_to image_tag("leaderboard") + "Leaderboards", leaderboards_url %></li>
		<li class="current"><%= link_to image_tag("replay") + "Match Logs", replays_url %></li>
		<li><%= link_to image_tag("account") + "Account", users_url %></li>                
		<li><%= link_to image_tag("logout") + "Logout", logout_url %></li>
		</ul>
	</div>

 	  <div id="content">
		     <%= yield %>
           <div id="map_canvas" style="width: 600px; height: 400px;"></div>
	</div>
</div>

	  <div id="footer">
			<p>Copyright(C) 2010 Delta470.</p>
	  </div>
</body>
</html>


